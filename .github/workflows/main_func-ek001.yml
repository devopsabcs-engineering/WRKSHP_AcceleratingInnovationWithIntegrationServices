# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - func-ek001

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "src" # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: "8.0.x" # set this to the dotnet version to use

# Permission can be added at job level or workflow level
permissions:
  id-token: write #This is required for requesting the JWT
  contents: write # This is required to create/push the new git tag

jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: write # This is required to create/push the new git tag
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.0.0
      - name: Display GitVersion outputs
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
      - name: Create tag
        uses: actions/github-script@v3
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ steps.gitversion.outputs.semVer }}",
              sha: context.sha
            })
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Resolve Project Dependencies Using Dotnet"
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_92A87846C9E24F9CA0ED31ACAD61D117 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2EC140FEE8E24AE3B6EC2F6280BF77A1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6EF05F94B2A746E4A1128B2A47F5987B }}

      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: "func-ek001"
          slot-name: "Production"
          package: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"
